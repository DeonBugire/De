package com.example.fn

import android.content.Context
import android.os.Bundle
import android.util.Log
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.ScrollState
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.clickable
import androidx.compose.foundation.horizontalScroll
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.layout.width
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.SnackbarDuration
import androidx.compose.material3.SnackbarHost
import androidx.compose.material3.SnackbarHostState
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.rememberCoroutineScope
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.fn.ui.theme.FNTheme
import kotlinx.coroutines.launch
import androidx.compose.runtime.*
import com.android.volley.Request
import com.android.volley.toolbox.StringRequest
import com.android.volley.toolbox.Volley

const val API_Key_Currency = "fca_live_xlJOAdBc3gF8c5MmDinU2EJuWYyryvYuXIp5RPcl"
class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        RequestCurrencyData ()
        setContent {
            val countOfClicks = remember{mutableStateOf(0)}
            val scope = rememberCoroutineScope()
            val snackbarHostState = remember { mutableStateOf(SnackbarHostState()) }

                Column (modifier = Modifier.verticalScroll(rememberScrollState())) {
                    Greeting ()
                    for (n in 1..countOfClicks.value)
                    Greeting ()
                }

                Box (contentAlignment = Alignment.BottomCenter ,
                    modifier = Modifier.fillMaxSize())
                {
                    Text(
                        "Варунодействий: ${countOfClicks.value}",
                        fontSize = 28.sp,
                        modifier = Modifier.clickable(onClick = { countOfClicks.value += 1
                            scope.launch {
                                snackbarHostState.value.showSnackbar("Сегодня по выгодной цене!",
                                    actionLabel = "X",
                                    duration = SnackbarDuration.Indefinite)
                            }
                        })
                            .padding(30.dp)
                            .background(Color.Cyan)
                    )
                    SnackbarHost(snackbarHostState.value)
                }
        }
    }


   private fun RequestCurrencyData () {
       val url = "https://api.freecurrencyapi.com/v1/latest?apikey=" +
               API_Key_Currency
       val queue = Volley.newRequestQueue(context)
       val request = StringRequest (
           Request.Method.GET,
           url,
           {
               result -> Log.d("MyLog", "Result: $result")
           },
           {
               error -> Log.d("MyLog", "Error: $error")
           }
       )
       queue.add()
   }
